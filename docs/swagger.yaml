basePath: /
definitions:
  models.ReqUserLogin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.ReqUserRegister:
    properties:
      birthday:
        type: string
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - birthday
    - email
    - fullname
    - password
    - username
    type: object
  models.ResponseErrors:
    properties:
      error:
        $ref: '#/definitions/models.errorResponse'
    type: object
  models.ResponseSuccess:
    properties:
      data:
        type: object
    type: object
  models.errorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber TapTalk Diary API
  version: "1.0"
paths:
  /api/v1/changepassword:
    put:
      operationId: ChangePassword
      responses:
        "200":
          description: 'token: "exampletokenresponse" '
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: 'code: 401, message: "Username or password not valid, please
            try again" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
        "422":
          description: 'code: 422, message: "Invalid request" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
      security:
      - token: []
      summary: Change Password
      tags:
      - User
  /api/v1/checkdevicelogin:
    get:
      operationId: CheckDeviceLogin
      responses:
        "200":
          description: 'token: "exampletokenresponse" '
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: 'code: 401, message: "Username or password not valid, please
            try again" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
        "422":
          description: 'code: 422, message: "Invalid request" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
      security:
      - token: []
      summary: Check Device Login
      tags:
      - User
  /api/v1/login:
    post:
      operationId: LoginUser
      parameters:
      - description: all fields mandatory
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.ReqUserLogin'
      responses:
        "200":
          description: 'token: "exampletokenresponse" '
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: 'code: 401, message: "Username or password not valid, please
            try again" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
        "422":
          description: 'code: 422, message: "Invalid request" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
      summary: Login User
      tags:
      - User
  /api/v1/register:
    post:
      operationId: RegisterUser
      parameters:
      - description: all fields mandatory
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.ReqUserRegister'
      responses:
        "200":
          description: 'token: "exampletokenresponse" '
          schema:
            $ref: '#/definitions/models.ResponseSuccess'
        "401":
          description: 'code: 401, message: "Username or password not valid, please
            try again" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
        "422":
          description: 'code: 422, message: "Invalid request" '
          schema:
            $ref: '#/definitions/models.ResponseErrors'
      summary: Register User
      tags:
      - User
schemes:
- http
securityDefinitions:
  Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
