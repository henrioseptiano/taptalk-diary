// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/changepassword": {
            "put": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change Password",
                "operationId": "ChangePassword",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/checkdevicelogin": {
            "get": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Check Device Login",
                "operationId": "CheckDeviceLogin",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/diary/create": {
            "post": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "Diaries"
                ],
                "summary": "Create Diary",
                "operationId": "CreateDiary",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/diary/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "Diaries"
                ],
                "summary": "Delete Diary",
                "operationId": "DeleteDiary",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/diary/listall": {
            "get": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "Diaries"
                ],
                "summary": "List All Diaries",
                "operationId": "ListAllDiaries",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/diary/update/{id}": {
            "put": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "Diaries"
                ],
                "summary": "Update Diary",
                "operationId": "UpdateDiary",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/diary/{id}": {
            "get": {
                "security": [
                    {
                        "token": []
                    }
                ],
                "tags": [
                    "Diaries"
                ],
                "summary": "Get Diary By Id",
                "operationId": "GetDiaryById",
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login User",
                "operationId": "LoginUser",
                "parameters": [
                    {
                        "description": "all fields mandatory",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReqUserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register User",
                "operationId": "RegisterUser",
                "parameters": [
                    {
                        "description": "all fields mandatory",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReqUserRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token: \"exampletokenresponse\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSuccess"
                        }
                    },
                    "401": {
                        "description": "code: 401, message: \"Username or password not valid, please try again\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    },
                    "422": {
                        "description": "code: 422, message: \"Invalid request\" ",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseErrors"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ReqUserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ReqUserRegister": {
            "type": "object",
            "required": [
                "birthday",
                "email",
                "fullname",
                "password",
                "username"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ResponseErrors": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/models.errorResponse"
                }
            }
        },
        "models.ResponseSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                }
            }
        },
        "models.errorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:3000",
	BasePath:    "/",
	Schemes:     []string{"http"},
	Title:       "Fiber TapTalk Diary API",
	Description: "This is a sample swagger for Fiber",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
